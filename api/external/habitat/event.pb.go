// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api/external/habitat/event.proto

package habitat // import "github.com/chef/automate/api/external/habitat"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import duration "github.com/golang/protobuf/ptypes/duration"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type UpdateStrategy int32

const (
	// The service will not update itself.
	UpdateStrategy_None UpdateStrategy = 0
	// Service updates are applied immediately as they are available,
	// with no additional coordination.
	UpdateStrategy_AtOnce UpdateStrategy = 1
	// Updates are applied one-by-one throughout a service group to
	// prevent everything from updating all at once.
	UpdateStrategy_Rolling UpdateStrategy = 2
)

var UpdateStrategy_name = map[int32]string{
	0: "None",
	1: "AtOnce",
	2: "Rolling",
}
var UpdateStrategy_value = map[string]int32{
	"None":    0,
	"AtOnce":  1,
	"Rolling": 2,
}

func (x UpdateStrategy) String() string {
	return proto.EnumName(UpdateStrategy_name, int32(x))
}
func (UpdateStrategy) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_event_a9db6120d94d6e4e, []int{0}
}

type HealthCheck int32

const (
	HealthCheck_Ok       HealthCheck = 0
	HealthCheck_Warning  HealthCheck = 1
	HealthCheck_Critical HealthCheck = 2
	HealthCheck_Unknown  HealthCheck = 3
)

var HealthCheck_name = map[int32]string{
	0: "Ok",
	1: "Warning",
	2: "Critical",
	3: "Unknown",
}
var HealthCheck_value = map[string]int32{
	"Ok":       0,
	"Warning":  1,
	"Critical": 2,
	"Unknown":  3,
}

func (x HealthCheck) String() string {
	return proto.EnumName(HealthCheck_name, int32(x))
}
func (HealthCheck) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_event_a9db6120d94d6e4e, []int{1}
}

type EventMetadata struct {
	// The unique ID of this Supervisor.
	SupervisorId string `protobuf:"bytes,1,opt,name=supervisor_id,json=supervisorId,proto3" json:"supervisor_id,omitempty"`
	// The IP address on which the Supervisor is listening for gossip.
	IpAddress string `protobuf:"bytes,2,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	// The time at which this event occurred.
	Timestamp            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Application          string               `protobuf:"bytes,4,opt,name=application,proto3" json:"application,omitempty"`
	Environment          string               `protobuf:"bytes,5,opt,name=environment,proto3" json:"environment,omitempty"`
	Meta                 map[string]string    `protobuf:"bytes,6,rep,name=meta,proto3" json:"meta,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Fqdn                 string               `protobuf:"bytes,7,opt,name=fqdn,proto3" json:"fqdn,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *EventMetadata) Reset()         { *m = EventMetadata{} }
func (m *EventMetadata) String() string { return proto.CompactTextString(m) }
func (*EventMetadata) ProtoMessage()    {}
func (*EventMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_a9db6120d94d6e4e, []int{0}
}
func (m *EventMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventMetadata.Unmarshal(m, b)
}
func (m *EventMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventMetadata.Marshal(b, m, deterministic)
}
func (dst *EventMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventMetadata.Merge(dst, src)
}
func (m *EventMetadata) XXX_Size() int {
	return xxx_messageInfo_EventMetadata.Size(m)
}
func (m *EventMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_EventMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_EventMetadata proto.InternalMessageInfo

func (m *EventMetadata) GetSupervisorId() string {
	if m != nil {
		return m.SupervisorId
	}
	return ""
}

func (m *EventMetadata) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *EventMetadata) GetTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *EventMetadata) GetApplication() string {
	if m != nil {
		return m.Application
	}
	return ""
}

func (m *EventMetadata) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

func (m *EventMetadata) GetMeta() map[string]string {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *EventMetadata) GetFqdn() string {
	if m != nil {
		return m.Fqdn
	}
	return ""
}

type ServiceMetadata struct {
	// todo: make a FQPI type
	PackageIdent string `protobuf:"bytes,1,opt,name=package_ident,json=packageIdent,proto3" json:"package_ident,omitempty"`
	// not necessarily FQPI
	SpecIdent string `protobuf:"bytes,2,opt,name=spec_ident,json=specIdent,proto3" json:"spec_ident,omitempty"`
	// todo: make / reuse a real type?
	ServiceGroup string `protobuf:"bytes,3,opt,name=service_group,json=serviceGroup,proto3" json:"service_group,omitempty"`
	// The channel a service was initially downloaded from, and (if an
	// update strategy is set) the channel from which updates will be
	// pulled.
	UpdateChannel        string         `protobuf:"bytes,4,opt,name=update_channel,json=updateChannel,proto3" json:"update_channel,omitempty"`
	UpdateStrategy       UpdateStrategy `protobuf:"varint,5,opt,name=update_strategy,json=updateStrategy,proto3,enum=chef.habitat.supervisor.event.UpdateStrategy" json:"update_strategy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ServiceMetadata) Reset()         { *m = ServiceMetadata{} }
func (m *ServiceMetadata) String() string { return proto.CompactTextString(m) }
func (*ServiceMetadata) ProtoMessage()    {}
func (*ServiceMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_a9db6120d94d6e4e, []int{1}
}
func (m *ServiceMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceMetadata.Unmarshal(m, b)
}
func (m *ServiceMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceMetadata.Marshal(b, m, deterministic)
}
func (dst *ServiceMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceMetadata.Merge(dst, src)
}
func (m *ServiceMetadata) XXX_Size() int {
	return xxx_messageInfo_ServiceMetadata.Size(m)
}
func (m *ServiceMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceMetadata proto.InternalMessageInfo

func (m *ServiceMetadata) GetPackageIdent() string {
	if m != nil {
		return m.PackageIdent
	}
	return ""
}

func (m *ServiceMetadata) GetSpecIdent() string {
	if m != nil {
		return m.SpecIdent
	}
	return ""
}

func (m *ServiceMetadata) GetServiceGroup() string {
	if m != nil {
		return m.ServiceGroup
	}
	return ""
}

func (m *ServiceMetadata) GetUpdateChannel() string {
	if m != nil {
		return m.UpdateChannel
	}
	return ""
}

func (m *ServiceMetadata) GetUpdateStrategy() UpdateStrategy {
	if m != nil {
		return m.UpdateStrategy
	}
	return UpdateStrategy_None
}

type ServiceStartedEvent struct {
	EventMetadata        *EventMetadata   `protobuf:"bytes,1,opt,name=event_metadata,json=eventMetadata,proto3" json:"event_metadata,omitempty"`
	ServiceMetadata      *ServiceMetadata `protobuf:"bytes,2,opt,name=service_metadata,json=serviceMetadata,proto3" json:"service_metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ServiceStartedEvent) Reset()         { *m = ServiceStartedEvent{} }
func (m *ServiceStartedEvent) String() string { return proto.CompactTextString(m) }
func (*ServiceStartedEvent) ProtoMessage()    {}
func (*ServiceStartedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_a9db6120d94d6e4e, []int{2}
}
func (m *ServiceStartedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStartedEvent.Unmarshal(m, b)
}
func (m *ServiceStartedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStartedEvent.Marshal(b, m, deterministic)
}
func (dst *ServiceStartedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStartedEvent.Merge(dst, src)
}
func (m *ServiceStartedEvent) XXX_Size() int {
	return xxx_messageInfo_ServiceStartedEvent.Size(m)
}
func (m *ServiceStartedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStartedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStartedEvent proto.InternalMessageInfo

func (m *ServiceStartedEvent) GetEventMetadata() *EventMetadata {
	if m != nil {
		return m.EventMetadata
	}
	return nil
}

func (m *ServiceStartedEvent) GetServiceMetadata() *ServiceMetadata {
	if m != nil {
		return m.ServiceMetadata
	}
	return nil
}

type ServiceStoppedEvent struct {
	EventMetadata        *EventMetadata   `protobuf:"bytes,1,opt,name=event_metadata,json=eventMetadata,proto3" json:"event_metadata,omitempty"`
	ServiceMetadata      *ServiceMetadata `protobuf:"bytes,2,opt,name=service_metadata,json=serviceMetadata,proto3" json:"service_metadata,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ServiceStoppedEvent) Reset()         { *m = ServiceStoppedEvent{} }
func (m *ServiceStoppedEvent) String() string { return proto.CompactTextString(m) }
func (*ServiceStoppedEvent) ProtoMessage()    {}
func (*ServiceStoppedEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_a9db6120d94d6e4e, []int{3}
}
func (m *ServiceStoppedEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceStoppedEvent.Unmarshal(m, b)
}
func (m *ServiceStoppedEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceStoppedEvent.Marshal(b, m, deterministic)
}
func (dst *ServiceStoppedEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceStoppedEvent.Merge(dst, src)
}
func (m *ServiceStoppedEvent) XXX_Size() int {
	return xxx_messageInfo_ServiceStoppedEvent.Size(m)
}
func (m *ServiceStoppedEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceStoppedEvent.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceStoppedEvent proto.InternalMessageInfo

func (m *ServiceStoppedEvent) GetEventMetadata() *EventMetadata {
	if m != nil {
		return m.EventMetadata
	}
	return nil
}

func (m *ServiceStoppedEvent) GetServiceMetadata() *ServiceMetadata {
	if m != nil {
		return m.ServiceMetadata
	}
	return nil
}

type HealthCheckEvent struct {
	EventMetadata   *EventMetadata   `protobuf:"bytes,1,opt,name=event_metadata,json=eventMetadata,proto3" json:"event_metadata,omitempty"`
	ServiceMetadata *ServiceMetadata `protobuf:"bytes,2,opt,name=service_metadata,json=serviceMetadata,proto3" json:"service_metadata,omitempty"`
	// The result of the health check execution
	Result HealthCheck `protobuf:"varint,3,opt,name=result,proto3,enum=chef.habitat.supervisor.event.HealthCheck" json:"result,omitempty"`
	// How long the health check took to run
	Duration *duration.Duration `protobuf:"bytes,4,opt,name=duration,proto3" json:"duration,omitempty"`
	// Whether or not the health check is defined in a hook
	HasHook              bool     `protobuf:"varint,5,opt,name=has_hook,json=hasHook,proto3" json:"has_hook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheckEvent) Reset()         { *m = HealthCheckEvent{} }
func (m *HealthCheckEvent) String() string { return proto.CompactTextString(m) }
func (*HealthCheckEvent) ProtoMessage()    {}
func (*HealthCheckEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_event_a9db6120d94d6e4e, []int{4}
}
func (m *HealthCheckEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheckEvent.Unmarshal(m, b)
}
func (m *HealthCheckEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheckEvent.Marshal(b, m, deterministic)
}
func (dst *HealthCheckEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheckEvent.Merge(dst, src)
}
func (m *HealthCheckEvent) XXX_Size() int {
	return xxx_messageInfo_HealthCheckEvent.Size(m)
}
func (m *HealthCheckEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheckEvent.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheckEvent proto.InternalMessageInfo

func (m *HealthCheckEvent) GetEventMetadata() *EventMetadata {
	if m != nil {
		return m.EventMetadata
	}
	return nil
}

func (m *HealthCheckEvent) GetServiceMetadata() *ServiceMetadata {
	if m != nil {
		return m.ServiceMetadata
	}
	return nil
}

func (m *HealthCheckEvent) GetResult() HealthCheck {
	if m != nil {
		return m.Result
	}
	return HealthCheck_Ok
}

func (m *HealthCheckEvent) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

func (m *HealthCheckEvent) GetHasHook() bool {
	if m != nil {
		return m.HasHook
	}
	return false
}

func init() {
	proto.RegisterType((*EventMetadata)(nil), "chef.habitat.supervisor.event.EventMetadata")
	proto.RegisterMapType((map[string]string)(nil), "chef.habitat.supervisor.event.EventMetadata.MetaEntry")
	proto.RegisterType((*ServiceMetadata)(nil), "chef.habitat.supervisor.event.ServiceMetadata")
	proto.RegisterType((*ServiceStartedEvent)(nil), "chef.habitat.supervisor.event.ServiceStartedEvent")
	proto.RegisterType((*ServiceStoppedEvent)(nil), "chef.habitat.supervisor.event.ServiceStoppedEvent")
	proto.RegisterType((*HealthCheckEvent)(nil), "chef.habitat.supervisor.event.HealthCheckEvent")
	proto.RegisterEnum("chef.habitat.supervisor.event.UpdateStrategy", UpdateStrategy_name, UpdateStrategy_value)
	proto.RegisterEnum("chef.habitat.supervisor.event.HealthCheck", HealthCheck_name, HealthCheck_value)
}

func init() {
	proto.RegisterFile("api/external/habitat/event.proto", fileDescriptor_event_a9db6120d94d6e4e)
}

var fileDescriptor_event_a9db6120d94d6e4e = []byte{
	// 664 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x95, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0xc7, 0x97, 0xb4, 0xeb, 0xda, 0xeb, 0xda, 0x45, 0x86, 0x87, 0xae, 0xd2, 0xa0, 0x1a, 0x42,
	0x9a, 0x26, 0x96, 0x48, 0x9d, 0x80, 0x09, 0x89, 0x87, 0x6d, 0x4c, 0x6c, 0x48, 0x30, 0x29, 0x65,
	0x20, 0x78, 0xa9, 0xdc, 0xe4, 0xd6, 0x58, 0x4d, 0xec, 0x90, 0x38, 0x85, 0x7d, 0x40, 0xbe, 0x03,
	0x9f, 0x81, 0x6f, 0xc0, 0x1b, 0xb2, 0xe3, 0x76, 0xed, 0x40, 0x4c, 0x3c, 0xee, 0xcd, 0xf9, 0xfb,
	0x7f, 0xe7, 0xbb, 0xdf, 0xc5, 0x09, 0xf4, 0x68, 0xca, 0x3c, 0xfc, 0x26, 0x31, 0xe3, 0x34, 0xf6,
	0x22, 0x3a, 0x62, 0x92, 0x4a, 0x0f, 0xa7, 0xc8, 0xa5, 0x9b, 0x66, 0x42, 0x0a, 0xb2, 0x15, 0x44,
	0x78, 0xe9, 0x9a, 0x1d, 0x37, 0x2f, 0x52, 0xcc, 0xa6, 0x2c, 0x17, 0x99, 0xab, 0x4d, 0xdd, 0x87,
	0x63, 0x21, 0xc6, 0x31, 0x7a, 0xda, 0x3c, 0x2a, 0x2e, 0x3d, 0xc9, 0x12, 0xcc, 0x25, 0x4d, 0xd2,
	0x32, 0xbe, 0xfb, 0xe0, 0xa6, 0x21, 0x2c, 0x32, 0x2a, 0x99, 0xe0, 0xe5, 0xfe, 0xf6, 0x4f, 0x1b,
	0x5a, 0x27, 0x2a, 0xd5, 0x5b, 0x94, 0x34, 0xa4, 0x92, 0x92, 0x47, 0xd0, 0xba, 0x3e, 0x66, 0xc8,
	0xc2, 0x8e, 0xd5, 0xb3, 0x76, 0x1a, 0xfe, 0xfa, 0xb5, 0x78, 0x16, 0x92, 0x2d, 0x00, 0x96, 0x0e,
	0x69, 0x18, 0x66, 0x98, 0xe7, 0x1d, 0x5b, 0x3b, 0x1a, 0x2c, 0x3d, 0x2c, 0x05, 0x72, 0x00, 0x8d,
	0x79, 0x21, 0x9d, 0x4a, 0xcf, 0xda, 0x69, 0xf6, 0xbb, 0x6e, 0x59, 0x89, 0x3b, 0xab, 0xc4, 0x7d,
	0x3f, 0x73, 0xf8, 0xd7, 0x66, 0xd2, 0x83, 0x26, 0x4d, 0xd3, 0x98, 0x05, 0xba, 0xc8, 0x4e, 0x55,
	0x67, 0x5e, 0x94, 0x94, 0x03, 0xf9, 0x94, 0x65, 0x82, 0x27, 0xc8, 0x65, 0x67, 0xb5, 0x74, 0x2c,
	0x48, 0xe4, 0x0d, 0x54, 0x13, 0x94, 0xb4, 0x53, 0xeb, 0x55, 0x76, 0x9a, 0xfd, 0x67, 0xee, 0x3f,
	0x11, 0xba, 0x4b, 0xdd, 0xbb, 0x6a, 0x71, 0xc2, 0x65, 0x76, 0xe5, 0xeb, 0x1c, 0x84, 0x40, 0xf5,
	0xf2, 0x4b, 0xc8, 0x3b, 0x6b, 0xfa, 0x18, 0xbd, 0xee, 0x3e, 0x87, 0xc6, 0xdc, 0x46, 0x1c, 0xa8,
	0x4c, 0xf0, 0xca, 0x40, 0x52, 0x4b, 0x72, 0x1f, 0x56, 0xa7, 0x34, 0x2e, 0xd0, 0x60, 0x29, 0x1f,
	0x5e, 0xd8, 0x07, 0xd6, 0xf6, 0x2f, 0x0b, 0x36, 0x06, 0xea, 0xf4, 0x00, 0x17, 0x71, 0xa7, 0x34,
	0x98, 0xd0, 0x31, 0x0e, 0x59, 0xa8, 0x1a, 0x32, 0xb8, 0x8d, 0x78, 0xa6, 0x34, 0x85, 0x3b, 0x4f,
	0x31, 0x30, 0x0e, 0x83, 0x5b, 0x29, 0xe5, 0xb6, 0x1a, 0x59, 0x99, 0x76, 0x38, 0xce, 0x44, 0x51,
	0x22, 0x57, 0x23, 0x2b, 0xc5, 0xd7, 0x4a, 0x23, 0x8f, 0xa1, 0x5d, 0xa4, 0x21, 0x95, 0x38, 0x0c,
	0x22, 0xca, 0x39, 0xc6, 0x06, 0x6e, 0xab, 0x54, 0x8f, 0x4b, 0x91, 0x7c, 0x80, 0x0d, 0x63, 0xcb,
	0x65, 0x46, 0x25, 0x8e, 0xaf, 0x34, 0xe2, 0x76, 0x7f, 0xef, 0x16, 0x8e, 0x17, 0x3a, 0x6a, 0x60,
	0x82, 0x7c, 0x73, 0xd8, 0xec, 0x79, 0xfb, 0xbb, 0x05, 0xf7, 0x4c, 0xef, 0x03, 0x49, 0x33, 0x89,
	0xa1, 0x06, 0x4f, 0x06, 0xd0, 0xd6, 0xf1, 0xc3, 0xc4, 0x10, 0xd1, 0x00, 0x9a, 0xfd, 0x27, 0xff,
	0x33, 0x36, 0xbf, 0x85, 0x4b, 0xef, 0xf0, 0x27, 0x70, 0x66, 0x40, 0xe6, 0x69, 0x6d, 0x9d, 0xd6,
	0xbd, 0x25, 0xed, 0x8d, 0xf1, 0xf8, 0x1b, 0xf9, 0xb2, 0xb0, 0xdc, 0x87, 0x48, 0xd3, 0xbb, 0xda,
	0xc7, 0x0f, 0x1b, 0x9c, 0x53, 0xa4, 0xb1, 0x8c, 0x8e, 0x23, 0x0c, 0x26, 0x77, 0xb2, 0x09, 0x72,
	0x04, 0xb5, 0x0c, 0xf3, 0x22, 0x96, 0xfa, 0x8d, 0x6f, 0xf7, 0x77, 0x6f, 0x49, 0xb8, 0xd0, 0xb0,
	0x6f, 0x22, 0xc9, 0x53, 0xa8, 0xcf, 0xbe, 0x89, 0xfa, 0x46, 0x34, 0xfb, 0x9b, 0x7f, 0x7c, 0xaa,
	0x5e, 0x19, 0x83, 0x3f, 0xb7, 0x92, 0x4d, 0xa8, 0x47, 0x34, 0x1f, 0x46, 0x42, 0x4c, 0xf4, 0x05,
	0xa9, 0xfb, 0x6b, 0x11, 0xcd, 0x4f, 0x85, 0x98, 0xec, 0xee, 0x43, 0x7b, 0xf9, 0x32, 0x90, 0x3a,
	0x54, 0xdf, 0x09, 0x8e, 0xce, 0x0a, 0x01, 0xa8, 0x1d, 0xca, 0x73, 0x1e, 0xa0, 0x63, 0x91, 0x26,
	0xac, 0xf9, 0x22, 0x8e, 0x19, 0x1f, 0x3b, 0xf6, 0xee, 0x4b, 0x68, 0x2e, 0x54, 0x47, 0x6a, 0x60,
	0x9f, 0x4f, 0x9c, 0x15, 0xe5, 0xf9, 0x48, 0x33, 0xae, 0x3c, 0x16, 0x59, 0x87, 0xfa, 0x71, 0xc6,
	0x24, 0x0b, 0x68, 0xec, 0xd8, 0x6a, 0xeb, 0x82, 0x4f, 0xb8, 0xf8, 0xca, 0x9d, 0xca, 0x91, 0xf7,
	0x79, 0x6f, 0xcc, 0x64, 0x54, 0x8c, 0xdc, 0x40, 0x24, 0x9e, 0xa2, 0xe0, 0xd1, 0x42, 0x8a, 0x84,
	0x4a, 0xf4, 0xfe, 0xf6, 0x93, 0x19, 0xd5, 0x74, 0x73, 0xfb, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0x51, 0x35, 0x0a, 0x3d, 0x83, 0x06, 0x00, 0x00,
}
